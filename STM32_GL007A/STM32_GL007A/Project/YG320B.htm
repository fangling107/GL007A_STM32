<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [E:\©зуж╡Бйтрг\GL007A\STM32_GL007A\STM32_GL007A\Project\YG320B.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image E:\©зуж╡Бйтрг\GL007A\STM32_GL007A\STM32_GL007A\Project\YG320B.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 24]: Last Updated: Wed Aug 05 17:54:05 2020
<BR><P>
<H3>Maximum Stack Usage =        240 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; key_function &rArr; menu_menu &rArr; data_Query &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR &rArr; SPI2_ReadWriteByte
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[39]">ADC3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f10x_it.o(i.BusFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[42]">DMA2_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[43]">DMA2_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[44]">DMA2_Channel3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[45]">DMA2_Channel4_5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f10x_it.o(i.DebugMon_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3a]">FSMC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f10x_it.o(i.HardFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f10x_it.o(i.MemManage_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f10x_it.o(i.NMI_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f10x_it.o(i.PendSV_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[33]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from rtc.o(i.RTC_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f10x_it.o(i.SVC_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f10x_it.o(i.SysTick_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[47]">SystemInit</a> from system_stm32f10x.o(i.SystemInit) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from stm32f10x_it.o(i.TIM4_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3c]">TIM5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[40]">TIM6_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[41]">TIM7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[36]">TIM8_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f10x_it.o(i.UsageFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[48]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[49]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[46]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[48]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[146]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[4a]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[67]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[147]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[148]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[149]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[14a]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[14b]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[14c]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[14d]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[cf]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_data
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Query
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintReport
</UL>

<P><STRONG><a name="[14e]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[4f]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_data
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holesize
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holeinnum
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Query
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintReport
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_Function
</UL>

<P><STRONG><a name="[52]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_Function
</UL>

<P><STRONG><a name="[53]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_data
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Query
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_Function
</UL>

<P><STRONG><a name="[6e]"></a>__aeabi_fmul</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_data
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_press
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Query
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_Function
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Save_Adjdata
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_XY_Calibration
</UL>

<P><STRONG><a name="[54]"></a>__aeabi_fdiv</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Get_Adjdata
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_data
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holesize
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holeinnum
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Query
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintReport
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_Function
</UL>

<P><STRONG><a name="[55]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holdsize
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[57]"></a>__aeabi_i2f</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Get_Adjdata
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_press
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holesize
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holeinnum
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Query
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintReport
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_Function
</UL>

<P><STRONG><a name="[58]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_data
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holdsize
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Query
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_Function
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_XY_Calibration
</UL>

<P><STRONG><a name="[59]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
</UL>

<P><STRONG><a name="[b6]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Save_Adjdata
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_XY_Calibration
</UL>

<P><STRONG><a name="[6f]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_data
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_press
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Query
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_Function
</UL>

<P><STRONG><a name="[5b]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
</UL>

<P><STRONG><a name="[8d]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holesize
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holeinnum
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holdsize
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintReport
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
</UL>

<P><STRONG><a name="[14f]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[115]"></a>__aeabi_cdcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
</UL>

<P><STRONG><a name="[116]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[5d]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holdsize
</UL>

<P><STRONG><a name="[d5]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintReport
</UL>

<P><STRONG><a name="[150]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bubble_sort
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_Function
</UL>

<P><STRONG><a name="[151]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[11c]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[5e]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[5c]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[152]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[153]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[51]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[50]"></a>_float_epilogue</STRONG> (Thumb, 90 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[56]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>

<P><STRONG><a name="[5a]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[60]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[62]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[63]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[64]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[65]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[66]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[4b]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[154]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[155]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[156]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>ADC_X</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, touch.o(i.ADC_X))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_X_ADC_Value_10bit
</UL>

<P><STRONG><a name="[b8]"></a>ADC_XY</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, touch.o(i.ADC_XY))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Y_ADC_Value_10bit
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_X_ADC_Value_10bit
</UL>

<P><STRONG><a name="[b9]"></a>ADC_Y</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, touch.o(i.ADC_Y))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Y_ADC_Value_10bit
</UL>

<P><STRONG><a name="[68]"></a>AD_Calibration_Function</STRONG> (Thumb, 1740 bytes, Stack size 56 bytes, main.o(i.AD_Calibration_Function))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = AD_Calibration_Function &rArr; AD_Calibration_menu &rArr; Put_AnJian &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_StringNum
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic_Mode
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Average
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Write
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Read
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speekers
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_menu
</UL>

<P><STRONG><a name="[6a]"></a>AD_Calibration_menu</STRONG> (Thumb, 802 bytes, Stack size 40 bytes, main.o(i.AD_Calibration_menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = AD_Calibration_menu &rArr; Put_AnJian &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x1
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_StringNum
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Put_AnJian
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoBold_Font
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear_with_Font_BgColor
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrint8bitBmp
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillRec
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x1
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic_Mode
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundTransparency
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundColor
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM_GB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayButtonUp
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1ms
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Full_Window
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bold_Font
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_Function
</UL>

<P><STRONG><a name="[8f]"></a>AT24CXX_Check</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, 24cxx.o(i.AT24CXX_Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = AT24CXX_Check &rArr; AT24CXX_ReadOneByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteOneByte
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_ReadOneByte
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[92]"></a>AT24CXX_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, 24cxx.o(i.AT24CXX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AT24CXX_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[69]"></a>AT24CXX_Read</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, 24cxx.o(i.AT24CXX_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AT24CXX_Read &rArr; AT24CXX_ReadOneByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_ReadOneByte
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_Function
</UL>

<P><STRONG><a name="[94]"></a>AT24CXX_ReadLenByte</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, 24cxx.o(i.AT24CXX_ReadLenByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = AT24CXX_ReadLenByte &rArr; AT24CXX_ReadOneByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_ReadOneByte
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Get_Adjdata
</UL>

<P><STRONG><a name="[90]"></a>AT24CXX_ReadOneByte</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, 24cxx.o(i.AT24CXX_ReadOneByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AT24CXX_ReadOneByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Get_Adjdata
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Read
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Check
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_ReadLenByte
</UL>

<P><STRONG><a name="[75]"></a>AT24CXX_Write</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, 24cxx.o(i.AT24CXX_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = AT24CXX_Write &rArr; AT24CXX_WriteOneByte &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteOneByte
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_Function
</UL>

<P><STRONG><a name="[9a]"></a>AT24CXX_WriteLenByte</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, 24cxx.o(i.AT24CXX_WriteLenByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AT24CXX_WriteLenByte &rArr; AT24CXX_WriteOneByte &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteOneByte
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Save_Adjdata
</UL>

<P><STRONG><a name="[91]"></a>AT24CXX_WriteOneByte</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, 24cxx.o(i.AT24CXX_WriteOneByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AT24CXX_WriteOneByte &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay1ms
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Write
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Check
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Query
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Save_Adjdata
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteLenByte
</UL>

<P><STRONG><a name="[9c]"></a>Access_TP_coordinate</STRONG> (Thumb, 180 bytes, Stack size 8 bytes, touch.o(i.Access_TP_coordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Access_TP_coordinate &rArr; Get_XY_Calibration &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1ms
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MidValueCalculate
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Y_ADC_Value_10bit
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_X_ADC_Value_10bit
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_XY_Calibration
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_TP_interrupt
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Status
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Scan
</UL>

<P><STRONG><a name="[85]"></a>Active_Window</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, ra8870.o(i.Active_Window))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Put_AnJian
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrintVert
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrintHorz
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrint8bitBmp
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillRec
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnJianPressed
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_failule
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_excel
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plese_opengas
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_print
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_flashmax
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_datamenu
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JianPan_Displayfu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
</UL>

<P><STRONG><a name="[13a]"></a>Adc_Init</STRONG> (Thumb, 322 bytes, Stack size 0 bytes, setup.o(i.Adc_Init))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a3]"></a>AnJianPressed</STRONG> (Thumb, 598 bytes, Stack size 44 bytes, ra8870.o(i.AnJianPressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = AnJianPressed &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillRec
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic_Mode
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_gas
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
</UL>

<P><STRONG><a name="[a4]"></a>BKP_DeInit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f10x_bkp.o(i.BKP_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BKP_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_BackupResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[e4]"></a>BKP_ReadBackupRegister</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_bkp.o(i.BKP_ReadBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BKP_ReadBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[f2]"></a>BKP_WriteBackupRegister</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f10x_bkp.o(i.BKP_WriteBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BKP_WriteBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[c5]"></a>BackgroundColor</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ra8870.o(i.BackgroundColor))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JianPan_Displayfu
</UL>

<P><STRONG><a name="[8c]"></a>Bold_Font</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ra8870.o(i.Bold_Font))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_gas
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[aa]"></a>Chk_Busy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ra8870.o(i.Chk_Busy))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_StringNum
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Cursor
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8870_TouchInit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrintVert
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrintHorz
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrint8bitBmp
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillRec
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Cursor
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawpoint
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_circle_fill
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_circle
</UL>

<P><STRONG><a name="[12f]"></a>Circle_Coordinate_Radius</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, ra8870.o(i.Circle_Coordinate_Radius))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Circle_Coordinate_Radius
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawpoint
</UL>

<P><STRONG><a name="[79]"></a>Clear_Full_Window</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, ra8870.o(i.Clear_Full_Window))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Clear_Full_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_RD_DATA
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDRA8870_Init
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[a9]"></a>Del_Cursor</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, ra8870.o(i.Del_Cursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Del_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_Busy
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect
</UL>

<P><STRONG><a name="[7d]"></a>Delay1ms</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ra8870.o(i.Delay1ms))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_time
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrint8bitBmp
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDRA8870_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speekers
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Access_TP_coordinate
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8870_PLL_ini
</UL>

<P><STRONG><a name="[ab]"></a>DisplayButton</STRONG> (Thumb, 160 bytes, Stack size 28 bytes, ra8870.o(i.DisplayButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = DisplayButton &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrintVert
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrintHorz
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillRec
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JianPan_Displayfu
</UL>

<P><STRONG><a name="[81]"></a>DisplayButtonUp</STRONG> (Thumb, 116 bytes, Stack size 20 bytes, ra8870.o(i.DisplayButtonUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = DisplayButtonUp &rArr; LcdPrintVert &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrintVert
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrintHorz
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JianPan_Displayfu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
</UL>

<P><STRONG><a name="[ae]"></a>Display_ON</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, ra8870.o(i.Display_ON))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Display_ON
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_RD_DATA
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDRA8870_Init
</UL>

<P><STRONG><a name="[af]"></a>Draw_circle</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, ra8870.o(i.Draw_circle))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Draw_circle
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_Busy
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawpoint
</UL>

<P><STRONG><a name="[b0]"></a>Draw_circle_fill</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, ra8870.o(i.Draw_circle_fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Draw_circle_fill
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_Busy
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawpoint
</UL>

<P><STRONG><a name="[da]"></a>Enable_TP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ra8870.o(i.Enable_TP))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8870_TouchInit
</UL>

<P><STRONG><a name="[83]"></a>External_CGROM</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ra8870.o(i.External_CGROM))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_failule
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_excel
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plese_opengas
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_print
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_flashmax
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_testdata
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_datamenu
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JianPan_Displayfu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
</UL>

<P><STRONG><a name="[84]"></a>External_CGROM_GB</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ra8870.o(i.External_CGROM_GB))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_failule
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_excel
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plese_opengas
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_print
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_flashmax
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_testdata
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_datamenu
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JianPan_Displayfu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
</UL>

<P><STRONG><a name="[ca]"></a>FSMC_NORSRAMCmd</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(i.FSMC_NORSRAMCmd))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FSMCConfig
</UL>

<P><STRONG><a name="[c9]"></a>FSMC_NORSRAMInit</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(i.FSMC_NORSRAMInit))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FSMCConfig
</UL>

<P><STRONG><a name="[89]"></a>Font_with_BackgroundColor</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ra8870.o(i.Font_with_BackgroundColor))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_failule
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_excel
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plese_opengas
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_print
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_flashmax
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
</UL>

<P><STRONG><a name="[88]"></a>Font_with_BackgroundTransparency</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ra8870.o(i.Font_with_BackgroundTransparency))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_failule
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_excel
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plese_opengas
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_print
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_flashmax
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
</UL>

<P><STRONG><a name="[b1]"></a>GPIO_Configuration</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, setup.o(i.GPIO_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitHardware
</UL>

<P><STRONG><a name="[b2]"></a>GPIO_Init</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesConfig
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_AD8341_Init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Printer_Init
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[b3]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stoptest
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Printer_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speekers
</UL>

<P><STRONG><a name="[c8]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesConfig
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;starttest
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_AD8341_Init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Printer_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speekers
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[cb]"></a>Geometric_Coordinate</STRONG> (Thumb, 100 bytes, Stack size 12 bytes, ra8870.o(i.Geometric_Coordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Geometric_Coordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrintVert
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrintHorz
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillRec
</UL>

<P><STRONG><a name="[b4]"></a>Get_Adc</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, setup.o(i.Get_Adc))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Average
</UL>

<P><STRONG><a name="[78]"></a>Get_Adc_Average</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, setup.o(i.Get_Adc_Average))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Get_Adc_Average
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_mus
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_Function
</UL>

<P><STRONG><a name="[a2]"></a>Get_XY_Calibration</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, touch.o(i.Get_XY_Calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Get_XY_Calibration &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Access_TP_coordinate
</UL>

<P><STRONG><a name="[9f]"></a>Get_X_ADC_Value_10bit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, touch.o(i.Get_X_ADC_Value_10bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Get_X_ADC_Value_10bit
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_XY
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_X
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Access_TP_coordinate
</UL>

<P><STRONG><a name="[a0]"></a>Get_Y_ADC_Value_10bit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, touch.o(i.Get_Y_ADC_Value_10bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Get_Y_ADC_Value_10bit
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Y
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_XY
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Access_TP_coordinate
</UL>

<P><STRONG><a name="[76]"></a>Graphic_Mode</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ra8870.o(i.Graphic_Mode))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Put_AnJian
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnJianPressed
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_failule
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_excel
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plese_opengas
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_gas
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_print
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_flashmax
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_datamenu
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JianPan_Displayfu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_Function
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>Horizontal_FontEnlarge_x1</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ra8870.o(i.Horizontal_FontEnlarge_x1))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_failule
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_excel
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plese_opengas
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_gas
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;off_gas
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_print
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_flashmax
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_datamenu
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
</UL>

<P><STRONG><a name="[86]"></a>Horizontal_FontEnlarge_x2</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ra8870.o(i.Horizontal_FontEnlarge_x2))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_failule
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plese_opengas
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_gas
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;off_gas
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_print
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_flashmax
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_datamenu
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
</UL>

<P><STRONG><a name="[ba]"></a>IIC_Ack</STRONG> (Thumb, 64 bytes, Stack size 4 bytes, myiic.o(i.IIC_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = IIC_Ack
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
</UL>

<P><STRONG><a name="[93]"></a>IIC_Init</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, myiic.o(i.IIC_Init))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Init
</UL>

<P><STRONG><a name="[bc]"></a>IIC_NAck</STRONG> (Thumb, 64 bytes, Stack size 4 bytes, myiic.o(i.IIC_NAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
</UL>

<P><STRONG><a name="[98]"></a>IIC_Read_Byte</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, myiic.o(i.IIC_Read_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_ReadOneByte
</UL>

<P><STRONG><a name="[96]"></a>IIC_Send_Byte</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, myiic.o(i.IIC_Send_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIC_Send_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteOneByte
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_ReadOneByte
</UL>

<P><STRONG><a name="[95]"></a>IIC_Start</STRONG> (Thumb, 60 bytes, Stack size 4 bytes, myiic.o(i.IIC_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = IIC_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteOneByte
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_ReadOneByte
</UL>

<P><STRONG><a name="[99]"></a>IIC_Stop</STRONG> (Thumb, 58 bytes, Stack size 4 bytes, myiic.o(i.IIC_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteOneByte
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_ReadOneByte
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
</UL>

<P><STRONG><a name="[97]"></a>IIC_Wait_Ack</STRONG> (Thumb, 82 bytes, Stack size 4 bytes, myiic.o(i.IIC_Wait_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteOneByte
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_ReadOneByte
</UL>

<P><STRONG><a name="[bd]"></a>InitHardware</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, setup.o(i.InitHardware))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = InitHardware &rArr; LCD_FSMCConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Int_Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FSMCConfig
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesConfig
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e1]"></a>Is_Leap_Year</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, rtc.o(i.Is_Leap_Year))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Get
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set
</UL>

<P><STRONG><a name="[c3]"></a>JianPan_Displayfu</STRONG> (Thumb, 520 bytes, Stack size 16 bytes, main.o(i.JianPan_Displayfu))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = JianPan_Displayfu &rArr; DisplayButton &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoBackgroundColor
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillRec
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic_Mode
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM_GB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayButtonUp
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayButton
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackgroundColor
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
</UL>

<P><STRONG><a name="[6b]"></a>KeyScan</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, touch.o(i.KeyScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = KeyScan &rArr; Access_TP_coordinate &rArr; Get_XY_Calibration &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1ms
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Access_TP_coordinate
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_TP_interrupt
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Status
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_menu
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_full
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Query
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_data
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyBoard
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_Function
</UL>

<P><STRONG><a name="[c6]"></a>LCDRA8870_Init</STRONG> (Thumb, 294 bytes, Stack size 4 bytes, ra8870.o(i.LCDRA8870_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCDRA8870_Init &rArr; Memory_Clear_with_Font_BgColor
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear_with_Font_BgColor
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1ms
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Full_Window
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8870_PLL_ini
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ON
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c0]"></a>LCD_CtrlLinesConfig</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, setup.o(i.LCD_CtrlLinesConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_CtrlLinesConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitHardware
</UL>

<P><STRONG><a name="[bf]"></a>LCD_FSMCConfig</STRONG> (Thumb, 92 bytes, Stack size 96 bytes, setup.o(i.LCD_FSMCConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LCD_FSMCConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMInit
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitHardware
</UL>

<P><STRONG><a name="[a7]"></a>LCD_RD_DATA</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ra8870.o(i.LCD_RD_DATA))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear_with_Font_BgColor
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Full_Window
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ON
</UL>

<P><STRONG><a name="[a8]"></a>LCD_WR_DATA</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ra8870.o(i.LCD_WR_DATA))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear_with_Font_BgColor
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDRA8870_Init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Full_Window
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8870_PLL_ini
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ON
</UL>

<P><STRONG><a name="[a6]"></a>LCD_WR_REG</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ra8870.o(i.LCD_WR_REG))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear_with_Font_BgColor
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDRA8870_Init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Full_Window
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8870_PLL_ini
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ON
</UL>

<P><STRONG><a name="[7e]"></a>LcdFillRec</STRONG> (Thumb, 88 bytes, Stack size 28 bytes, ra8870.o(i.LcdFillRec))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Geometric_Coordinate
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_Busy
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Put_AnJian
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayButton
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnJianPressed
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_failule
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_excel
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plese_opengas
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_gas
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_print
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_flashmax
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_datamenu
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JianPan_Displayfu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
</UL>

<P><STRONG><a name="[7f]"></a>LcdPrint8bitBmp</STRONG> (Thumb, 180 bytes, Stack size 36 bytes, ra8870.o(i.LcdPrint8bitBmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LcdPrint8bitBmp &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1ms
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_Busy
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_failule
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plese_opengas
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_gas
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_print
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_flashmax
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
</UL>

<P><STRONG><a name="[ac]"></a>LcdPrintHorz</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, ra8870.o(i.LcdPrintHorz))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LcdPrintHorz &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Geometric_Coordinate
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_Busy
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayButtonUp
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayButton
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_excel
</UL>

<P><STRONG><a name="[ad]"></a>LcdPrintVert</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, ra8870.o(i.LcdPrintVert))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LcdPrintVert &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Geometric_Coordinate
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_Busy
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayButtonUp
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayButton
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_excel
</UL>

<P><STRONG><a name="[cc]"></a>MY_NVIC_Init</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, setup.o(i.MY_NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MY_NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[cd]"></a>MY_NVIC_PriorityGroupConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, setup.o(i.MY_NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_Init
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>Memory_Clear</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, ra8870.o(i.Memory_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Memory_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_Busy
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8870_TouchInit
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDRA8870_Init
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_datamenu
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
</UL>

<P><STRONG><a name="[7a]"></a>Memory_Clear_with_Font_BgColor</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, ra8870.o(i.Memory_Clear_with_Font_BgColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Memory_Clear_with_Font_BgColor
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_RD_DATA
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDRA8870_Init
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
</UL>

<P><STRONG><a name="[a1]"></a>MidValueCalculate</STRONG> (Thumb, 254 bytes, Stack size 0 bytes, touch.o(i.MidValueCalculate))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Access_TP_coordinate
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[10d]"></a>NVIC_Init</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Int_Init
</UL>

<P><STRONG><a name="[c4]"></a>NoBackgroundColor</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ra8870.o(i.NoBackgroundColor))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JianPan_Displayfu
</UL>

<P><STRONG><a name="[8e]"></a>NoBold_Font</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ra8870.o(i.NoBold_Font))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_gas
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
</UL>

<P><STRONG><a name="[e5]"></a>PWR_BackupAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_pwr.o(i.PWR_BackupAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[144]"></a>P_WriteData</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, printer.o(i.P_WriteData))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pprint
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[ce]"></a>PrintReport</STRONG> (Thumb, 1678 bytes, Stack size 64 bytes, main.o(i.PrintReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = PrintReport &rArr; menu_print &rArr; LcdPrint8bitBmp &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pprint
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStrNnum
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_print
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect
</UL>

<P><STRONG><a name="[d3]"></a>PrintStr</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, printer.o(i.PrintStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PrintStr &rArr; pprint
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayms
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pprint
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintReport
</UL>

<P><STRONG><a name="[d4]"></a>PrintStrNnum</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, printer.o(i.PrintStrNnum))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PrintStrNnum &rArr; pprint
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayms
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pprint
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintReport
</UL>

<P><STRONG><a name="[d7]"></a>Printer_Init</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, printer.o(i.Printer_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Printer_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>Put_AnJian</STRONG> (Thumb, 598 bytes, Stack size 44 bytes, ra8870.o(i.Put_AnJian))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Put_AnJian &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillRec
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic_Mode
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;off_gas
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_flashmax
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_datamenu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
</UL>

<P><STRONG><a name="[c7]"></a>RA8870_PLL_ini</STRONG> (Thumb, 64 bytes, Stack size 4 bytes, ra8870.o(i.RA8870_PLL_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RA8870_PLL_ini
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1ms
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDRA8870_Init
</UL>

<P><STRONG><a name="[d9]"></a>RA8870_TouchInit</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, ra8870.o(i.RA8870_TouchInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RA8870_TouchInit &rArr; Memory_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_TP_interrupt
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_TP_interrupt
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_auto_mode
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_4wire_TP
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_TP
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_Busy
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[de]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[df]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Int_Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[d8]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_AD8341_Init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Printer_Init
</UL>

<P><STRONG><a name="[a5]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_BackupResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_DeInit
</UL>

<P><STRONG><a name="[be]"></a>RCC_Configuration</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, setup.o(i.RCC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_Configuration
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitHardware
</UL>

<P><STRONG><a name="[e8]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f10x_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[e6]"></a>RCC_LSEConfig</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_LSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[ea]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_RTCCLKCmd))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[e9]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_RTCCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[ee]"></a>RTC_EnterConfigMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_EnterConfigMode))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[f1]"></a>RTC_ExitConfigMode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_ExitConfigMode))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[e0]"></a>RTC_Get</STRONG> (Thumb, 242 bytes, Stack size 16 bytes, rtc.o(i.RTC_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RTC_Get &rArr; RTC_Get_Week
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Get_Week
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_Leap_Year
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[e2]"></a>RTC_Get_Week</STRONG> (Thumb, 114 bytes, Stack size 20 bytes, rtc.o(i.RTC_Get_Week))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RTC_Get_Week
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Get
</UL>

<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 66 bytes, Stack size 4 bytes, rtc.o(i.RTC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RTC_IRQHandler &rArr; RTC_Get &rArr; RTC_Get_Week
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[ed]"></a>RTC_ITConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[e3]"></a>RTC_Init</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, rtc.o(i.RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = RTC_Init &rArr; RTC_Set &rArr; RTC_Get &rArr; RTC_Get_Week
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForLastTask
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ITConfig
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitConfigMode
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterConfigMode
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKConfig
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKCmd
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSEConfig
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_WriteBackupRegister
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_ReadBackupRegister
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_DeInit
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Get
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MY_NVIC_Init
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f0]"></a>RTC_Set</STRONG> (Thumb, 244 bytes, Stack size 36 bytes, rtc.o(i.RTC_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = RTC_Set &rArr; RTC_Get &rArr; RTC_Get_Week
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Get
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_Leap_Year
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
</UL>

<P><STRONG><a name="[ef]"></a>RTC_SetPrescaler</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, stm32f10x_rtc.o(i.RTC_SetPrescaler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_SetPrescaler
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitConfigMode
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterConfigMode
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[eb]"></a>RTC_WaitForLastTask</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_WaitForLastTask))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[ec]"></a>RTC_WaitForSynchro</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_WaitForSynchro))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[f3]"></a>SPI1_Init</STRONG> (Thumb, 182 bytes, Stack size 4 bytes, spi.o(i.SPI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SPI1_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_AD8341_Init
</UL>

<P><STRONG><a name="[f4]"></a>SPI1_ReadWriteByte</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, spi.o(i.SPI1_ReadWriteByte))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
</UL>

<P><STRONG><a name="[f5]"></a>SPI2_Init</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, spi.o(i.SPI2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPI2_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
</UL>

<P><STRONG><a name="[f8]"></a>SPI2_ReadWriteByte</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, spi.o(i.SPI2_ReadWriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI2_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Erase_Sector
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Page
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_ReadSR
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Write_Enable
</UL>

<P><STRONG><a name="[fc]"></a>SPI2_SetSpeed</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, spi.o(i.SPI2_SetSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI2_SetSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
</UL>

<P><STRONG><a name="[fd]"></a>SPI_AD8341_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ads8341.o(i.SPI_AD8341_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_AD8341_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f7]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_SetSpeed
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[fe]"></a>SPI_FLASH_Write_Enable</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, flash.o(i.SPI_FLASH_Write_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_FLASH_Write_Enable &rArr; SPI2_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Erase_Sector
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Page
</UL>

<P><STRONG><a name="[ff]"></a>SPI_Flash_Erase_Sector</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, flash.o(i.SPI_Flash_Erase_Sector))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_Flash_Erase_Sector &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR &rArr; SPI2_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Wait_Busy
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Write_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Query
</UL>

<P><STRONG><a name="[c2]"></a>SPI_Flash_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, flash.o(i.SPI_Flash_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SPI_Flash_Init &rArr; SPI2_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_SetSpeed
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitHardware
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d1]"></a>SPI_Flash_Read</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, flash.o(i.SPI_Flash_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPI_Flash_Read &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR &rArr; SPI2_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Wait_Busy
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Query
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_data
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintReport
</UL>

<P><STRONG><a name="[101]"></a>SPI_Flash_ReadSR</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, flash.o(i.SPI_Flash_ReadSR))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_Flash_ReadSR &rArr; SPI2_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Wait_Busy
</UL>

<P><STRONG><a name="[100]"></a>SPI_Flash_Wait_Busy</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, flash.o(i.SPI_Flash_Wait_Busy))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR &rArr; SPI2_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_ReadSR
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Erase_Sector
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Page
</UL>

<P><STRONG><a name="[102]"></a>SPI_Flash_Write</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, flash.o(i.SPI_Flash_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR &rArr; SPI2_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Erase_Sector
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_NoCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_data
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Query
</UL>

<P><STRONG><a name="[103]"></a>SPI_Flash_Write_NoCheck</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, flash.o(i.SPI_Flash_Write_NoCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR &rArr; SPI2_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Page
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write
</UL>

<P><STRONG><a name="[104]"></a>SPI_Flash_Write_Page</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, flash.o(i.SPI_Flash_Write_Page))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR &rArr; SPI2_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Wait_Busy
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Write_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_NoCheck
</UL>

<P><STRONG><a name="[f9]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
</UL>

<P><STRONG><a name="[fb]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
</UL>

<P><STRONG><a name="[fa]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
</UL>

<P><STRONG><a name="[f6]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[105]"></a>ScanKeyBoard</STRONG> (Thumb, 780 bytes, Stack size 8 bytes, main.o(i.ScanKeyBoard))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ScanKeyBoard &rArr; KeyScan &rArr; Access_TP_coordinate &rArr; Get_XY_Calibration &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speekers
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
</UL>

<P><STRONG><a name="[db]"></a>Set_4wire_TP</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ra8870.o(i.Set_4wire_TP))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8870_TouchInit
</UL>

<P><STRONG><a name="[108]"></a>Show_Cursor</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, ra8870.o(i.Show_Cursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Show_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_Busy
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect
</UL>

<P><STRONG><a name="[73]"></a>Show_String</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, ra8870.o(i.Show_String))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Show_String
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_Busy
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_failule
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_excel
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plese_opengas
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_gas
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;off_gas
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_print
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_flashmax
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_number
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_datamenu
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JianPan_Displayfu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_Function
</UL>

<P><STRONG><a name="[72]"></a>Show_StringNum</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, ra8870.o(i.Show_StringNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Show_StringNum
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_Busy
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_time
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_zunum
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_riqi
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_press
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pre
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pa
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_number
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holesize
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holeinnum
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holdsize
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_Function
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f10x_it.o(i.TIM4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM4_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c1]"></a>TIM4_Int_Init</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, setup.o(i.TIM4_Int_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM4_Int_Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitHardware
</UL>

<P><STRONG><a name="[10a]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[10e]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Int_Init
</UL>

<P><STRONG><a name="[109]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(i.TIM_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[10c]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Int_Init
</UL>

<P><STRONG><a name="[10b]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Int_Init
</UL>

<P><STRONG><a name="[10f]"></a>TP_Get_Adjdata</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, touch.o(i.TP_Get_Adjdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TP_Get_Adjdata &rArr; AT24CXX_ReadLenByte &rArr; AT24CXX_ReadOneByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_ReadOneByte
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_ReadLenByte
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[110]"></a>TP_Save_Adjdata</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, touch.o(i.TP_Save_Adjdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TP_Save_Adjdata &rArr; AT24CXX_WriteLenByte &rArr; AT24CXX_WriteOneByte &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteOneByte
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteLenByte
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
</UL>

<P><STRONG><a name="[111]"></a>TP_Scan</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, touch.o(i.TP_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TP_Scan &rArr; Access_TP_coordinate &rArr; Get_XY_Calibration &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Access_TP_coordinate
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Status
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
</UL>

<P><STRONG><a name="[dc]"></a>TP_auto_mode</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ra8870.o(i.TP_auto_mode))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8870_TouchInit
</UL>

<P><STRONG><a name="[7b]"></a>Text_Background_Color</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ra8870.o(i.Text_Background_Color))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_time
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDRA8870_Init
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_failule
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_excel
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plese_opengas
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_gas
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;off_gas
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_print
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_flashmax
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_testdata
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_press
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pre
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_number
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holdsize
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_datamenu
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JianPan_Displayfu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
</UL>

<P><STRONG><a name="[6d]"></a>Text_Foreground_Color</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ra8870.o(i.Text_Foreground_Color))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_time
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrintVert
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrintHorz
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillRec
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_failule
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_excel
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plese_opengas
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_gas
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;off_gas
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_print
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_flashmax
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_testdata
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_press
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pre
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_number
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holdsize
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_datamenu
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JianPan_Displayfu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_Function
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawpoint
</UL>

<P><STRONG><a name="[82]"></a>Text_Mode</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ra8870.o(i.Text_Mode))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_StringNum
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Put_AnJian
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnJianPressed
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_failule
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_excel
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plese_opengas
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_gas
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_print
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_flashmax
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_testdata
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_datamenu
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JianPan_Displayfu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
</UL>

<P><STRONG><a name="[9e]"></a>Touch_Status</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ra8870.o(i.Touch_Status))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Scan
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Access_TP_coordinate
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>Vertical_FontEnlarge_x1</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ra8870.o(i.Vertical_FontEnlarge_x1))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_failule
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_excel
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plese_opengas
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_gas
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;off_gas
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_print
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_flashmax
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_datamenu
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
</UL>

<P><STRONG><a name="[87]"></a>Vertical_FontEnlarge_x2</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ra8870.o(i.Vertical_FontEnlarge_x2))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_failule
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plese_opengas
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_gas
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;off_gas
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_print
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_flashmax
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_datamenu
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
</UL>

<P><STRONG><a name="[112]"></a>XY_Calibration_Function</STRONG> (Thumb, 1464 bytes, Stack size 72 bytes, touch.o(i.XY_Calibration_Function))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = XY_Calibration_Function &rArr; TP_Get_Adjdata &rArr; AT24CXX_ReadLenByte &rArr; AT24CXX_ReadOneByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Get_Adjdata
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoBold_Font
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic_Mode
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM_GB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1ms
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bold_Font
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawpoint
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Scan
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Save_Adjdata
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_Busy
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_menu
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>XY_Coordinate</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, ra8870.o(i.XY_Coordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = XY_Coordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_time
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrint8bitBmp
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_failule
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_excel
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plese_opengas
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_gas
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;off_gas
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_print
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_flashmax
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_zunum
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_riqi
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_press
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pre
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pa
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_number
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holesize
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holeinnum
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holdsize
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_datamenu
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;biaoding_menu
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JianPan_Displayfu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_Function
</UL>

<P><STRONG><a name="[117]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[157]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[70]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_time
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_zunum
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_riqi
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_press
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pre
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pa
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_number
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holesize
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holeinnum
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holdsize
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintReport
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_menu
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_Function
</UL>

<P><STRONG><a name="[158]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[159]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[15a]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[15b]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[15c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[145]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[77]"></a>biaoding_menu</STRONG> (Thumb, 754 bytes, Stack size 24 bytes, main.o(i.biaoding_menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = biaoding_menu &rArr; JianPan_Displayfu &rArr; DisplayButton &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x1
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_StringNum
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear_with_Font_BgColor
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrint8bitBmp
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x1
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic_Mode
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundTransparency
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundColor
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM_GB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1ms
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Full_Window
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyBoard
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JianPan_Displayfu
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_Function
</UL>

<P><STRONG><a name="[11d]"></a>bubble_sort</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, main.o(i.bubble_sort))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bubble_sort
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_data
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Query
</UL>

<P><STRONG><a name="[11e]"></a>check_data</STRONG> (Thumb, 598 bytes, Stack size 8 bytes, main.o(i.check_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = check_data &rArr; check_datamenu &rArr; Put_AnJian &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speekers
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_testdata
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_datamenu
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Query
</UL>

<P><STRONG><a name="[11f]"></a>check_datamenu</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, main.o(i.check_datamenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = check_datamenu &rArr; Put_AnJian &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x1
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Put_AnJian
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillRec
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x1
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic_Mode
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM_GB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_excel
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_data
</UL>

<P><STRONG><a name="[9d]"></a>clear_TP_interrupt</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ra8870.o(i.clear_TP_interrupt))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8870_TouchInit
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Access_TP_coordinate
</UL>

<P><STRONG><a name="[122]"></a>data_Query</STRONG> (Thumb, 2662 bytes, Stack size 72 bytes, main.o(i.data_Query))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = data_Query &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR &rArr; SPI2_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Erase_Sector
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteOneByte
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speekers
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_dataQuery
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_data
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bubble_sort
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_menu
</UL>

<P><STRONG><a name="[9b]"></a>delay1ms</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, 24cxx.o(i.delay1ms))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteOneByte
</UL>

<P><STRONG><a name="[e7]"></a>delay_ms</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rtc.o(i.delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[b5]"></a>delay_mus</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, setup.o(i.delay_mus))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Average
</UL>

<P><STRONG><a name="[bb]"></a>delay_us</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, myiic.o(i.delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
</UL>

<P><STRONG><a name="[d6]"></a>delayms</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, printer.o(i.delayms))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pprint
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStrNnum
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
</UL>

<P><STRONG><a name="[124]"></a>display_holdsize</STRONG> (Thumb, 106 bytes, Stack size 48 bytes, main.o(i.display_holdsize))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = display_holdsize &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_StringNum
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
</UL>

<P><STRONG><a name="[125]"></a>display_holeinnum</STRONG> (Thumb, 610 bytes, Stack size 48 bytes, main.o(i.display_holeinnum))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = display_holeinnum &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_StringNum
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_testdata
</UL>

<P><STRONG><a name="[126]"></a>display_holesize</STRONG> (Thumb, 334 bytes, Stack size 48 bytes, main.o(i.display_holesize))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = display_holesize &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_StringNum
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_testdata
</UL>

<P><STRONG><a name="[127]"></a>display_number</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, main.o(i.display_number))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = display_number &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_StringNum
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
</UL>

<P><STRONG><a name="[128]"></a>display_pa</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, main.o(i.display_pa))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = display_pa &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_StringNum
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_testdata
</UL>

<P><STRONG><a name="[129]"></a>display_pre</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, main.o(i.display_pre))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = display_pre &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_StringNum
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
</UL>

<P><STRONG><a name="[12a]"></a>display_press</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, main.o(i.display_press))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = display_press &rArr; off_gas &rArr; Put_AnJian &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_StringNum
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;off_gas
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
</UL>

<P><STRONG><a name="[12c]"></a>display_riqi</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, main.o(i.display_riqi))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = display_riqi &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_StringNum
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_testdata
</UL>

<P><STRONG><a name="[120]"></a>display_testdata</STRONG> (Thumb, 822 bytes, Stack size 8 bytes, main.o(i.display_testdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = display_testdata &rArr; display_holesize &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM_GB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_excel
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_zunum
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_riqi
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pa
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holesize
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holeinnum
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_data
</UL>

<P><STRONG><a name="[12e]"></a>display_time</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, ra8870.o(i.display_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = display_time &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_StringNum
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1ms
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12d]"></a>display_zunum</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, main.o(i.display_zunum))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = display_zunum &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_StringNum
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_testdata
</UL>

<P><STRONG><a name="[113]"></a>drawpoint</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, touch.o(i.drawpoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = drawpoint &rArr; Circle_Coordinate_Radius
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_circle_fill
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_circle
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Circle_Coordinate_Radius
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_Busy
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
</UL>

<P><STRONG><a name="[dd]"></a>enable_TP_interrupt</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ra8870.o(i.enable_TP_interrupt))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8870_TouchInit
</UL>

<P><STRONG><a name="[130]"></a>flash_full</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, main.o(i.flash_full))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = flash_full &rArr; menu1 &rArr; display_press &rArr; off_gas &rArr; Put_AnJian &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speekers
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_flashmax
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
</UL>

<P><STRONG><a name="[133]"></a>key_function</STRONG> (Thumb, 1398 bytes, Stack size 24 bytes, main.o(i.key_function))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = key_function &rArr; menu_menu &rArr; data_Query &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR &rArr; SPI2_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x1
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Put_AnJian
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrint8bitBmp
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillRec
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x1
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic_Mode
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Average
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundTransparency
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundColor
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM_GB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnJianPressed
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteOneByte
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_failule
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speekers
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_data
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plese_opengas
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paixu
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_gas
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;off_gas
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_menu
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_full
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_press
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pre
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_number
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holdsize
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>main</STRONG> (Thumb, 434 bytes, Stack size 24 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = main &rArr; key_function &rArr; menu_menu &rArr; data_Query &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR &rArr; SPI2_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_time
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Get_Adjdata
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_AD8341_Init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8870_TouchInit
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Printer_Init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDRA8870_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitHardware
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Average
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_ReadOneByte
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Read
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Check
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speekers
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_press
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[132]"></a>menu1</STRONG> (Thumb, 408 bytes, Stack size 16 bytes, main.o(i.menu1))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = menu1 &rArr; display_press &rArr; off_gas &rArr; Put_AnJian &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x1
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Put_AnJian
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoBold_Font
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrint8bitBmp
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillRec
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x1
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic_Mode
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM_GB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bold_Font
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_gas
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;off_gas
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_press
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_number
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_holdsize
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_full
</UL>

<P><STRONG><a name="[13b]"></a>menu_data</STRONG> (Thumb, 816 bytes, Stack size 40 bytes, main.o(i.menu_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = menu_data &rArr; JianPan_Displayfu &rArr; DisplayButton &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x1
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_StringNum
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear_with_Font_BgColor
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrint8bitBmp
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x1
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic_Mode
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundTransparency
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundColor
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM_GB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1ms
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Full_Window
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyBoard
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JianPan_Displayfu
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_menu
</UL>

<P><STRONG><a name="[123]"></a>menu_dataQuery</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, main.o(i.menu_dataQuery))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = menu_dataQuery &rArr; Put_AnJian &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x1
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Put_AnJian
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoBold_Font
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear_with_Font_BgColor
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrint8bitBmp
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillRec
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x1
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic_Mode
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundTransparency
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundColor
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM_GB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayButtonUp
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1ms
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Full_Window
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bold_Font
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Query
</UL>

<P><STRONG><a name="[131]"></a>menu_flashmax</STRONG> (Thumb, 242 bytes, Stack size 16 bytes, main.o(i.menu_flashmax))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = menu_flashmax &rArr; Put_AnJian &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x1
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Put_AnJian
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrint8bitBmp
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillRec
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x1
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic_Mode
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundTransparency
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundColor
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM_GB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_full
</UL>

<P><STRONG><a name="[135]"></a>menu_menu</STRONG> (Thumb, 580 bytes, Stack size 8 bytes, main.o(i.menu_menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = menu_menu &rArr; data_Query &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR &rArr; SPI2_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speekers
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_password
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_data
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Query
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_Function
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
</UL>

<P><STRONG><a name="[13e]"></a>menu_password</STRONG> (Thumb, 774 bytes, Stack size 32 bytes, main.o(i.menu_password))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = menu_password &rArr; JianPan_Displayfu &rArr; DisplayButton &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x1
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_StringNum
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear_with_Font_BgColor
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrint8bitBmp
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x1
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic_Mode
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundTransparency
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundColor
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM_GB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1ms
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Full_Window
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyBoard
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JianPan_Displayfu
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_menu
</UL>

<P><STRONG><a name="[d0]"></a>menu_print</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, main.o(i.menu_print))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = menu_print &rArr; LcdPrint8bitBmp &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x1
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrint8bitBmp
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillRec
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x1
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic_Mode
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundTransparency
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundColor
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM_GB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintReport
</UL>

<P><STRONG><a name="[13f]"></a>menu_printselect</STRONG> (Thumb, 406 bytes, Stack size 8 bytes, main.o(i.menu_printselect))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = menu_printselect &rArr; set_printnum &rArr; menu_printselect1 &rArr; Put_AnJian &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Cursor
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Cursor
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speekers
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintReport
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_menu
</UL>

<P><STRONG><a name="[140]"></a>menu_printselect1</STRONG> (Thumb, 374 bytes, Stack size 16 bytes, main.o(i.menu_printselect1))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = menu_printselect1 &rArr; Put_AnJian &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x1
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_StringNum
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Cursor
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Put_AnJian
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrint8bitBmp
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillRec
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x1
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic_Mode
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundTransparency
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundColor
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM_GB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Cursor
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_printnum
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect
</UL>

<P><STRONG><a name="[13c]"></a>menu_select</STRONG> (Thumb, 406 bytes, Stack size 16 bytes, main.o(i.menu_select))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = menu_select &rArr; Put_AnJian &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x1
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Put_AnJian
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoBold_Font
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear_with_Font_BgColor
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrint8bitBmp
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillRec
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x1
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic_Mode
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundTransparency
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundColor
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM_GB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayButtonUp
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1ms
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Full_Window
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bold_Font
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_menu
</UL>

<P><STRONG><a name="[13d]"></a>menu_time</STRONG> (Thumb, 810 bytes, Stack size 40 bytes, main.o(i.menu_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = menu_time &rArr; JianPan_Displayfu &rArr; DisplayButton &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x1
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_StringNum
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear_with_Font_BgColor
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrint8bitBmp
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x1
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic_Mode
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundTransparency
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundColor
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM_GB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1ms
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Full_Window
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyBoard
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JianPan_Displayfu
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_menu
</UL>

<P><STRONG><a name="[12b]"></a>off_gas</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, main.o(i.off_gas))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = off_gas &rArr; Put_AnJian &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stoptest
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x1
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Put_AnJian
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x1
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_press
</UL>

<P><STRONG><a name="[136]"></a>open_gas</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, main.o(i.open_gas))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = open_gas &rArr; AnJianPressed &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;starttest
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x1
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoBold_Font
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrint8bitBmp
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillRec
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x1
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic_Mode
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bold_Font
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnJianPressed
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu1
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
</UL>

<P><STRONG><a name="[138]"></a>paixu</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, main.o(i.paixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = paixu
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
</UL>

<P><STRONG><a name="[134]"></a>plese_opengas</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, main.o(i.plese_opengas))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = plese_opengas &rArr; LcdPrint8bitBmp &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x1
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrint8bitBmp
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillRec
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x1
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic_Mode
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundTransparency
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundColor
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM_GB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
</UL>

<P><STRONG><a name="[d2]"></a>pprint</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, printer.o(i.pprint))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pprint
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayms
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;P_WriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStrNnum
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintStr
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintReport
</UL>

<P><STRONG><a name="[139]"></a>save_data</STRONG> (Thumb, 1534 bytes, Stack size 64 bytes, main.o(i.save_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = save_data &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR &rArr; SPI2_ReadWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bubble_sort
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
</UL>

<P><STRONG><a name="[141]"></a>set_printnum</STRONG> (Thumb, 680 bytes, Stack size 32 bytes, main.o(i.set_printnum))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = set_printnum &rArr; menu_printselect1 &rArr; Put_AnJian &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x1
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_StringNum
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear_with_Font_BgColor
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Clear
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrint8bitBmp
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x1
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic_Mode
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundTransparency
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundColor
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM_GB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1ms
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Full_Window
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect1
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyBoard
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JianPan_Displayfu
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect
</UL>

<P><STRONG><a name="[121]"></a>show_excel</STRONG> (Thumb, 458 bytes, Stack size 16 bytes, main.o(i.show_excel))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = show_excel &rArr; LcdFillRec &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x1
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrintVert
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrintHorz
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillRec
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x1
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic_Mode
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundTransparency
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundColor
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM_GB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_testdata
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_datamenu
</UL>

<P><STRONG><a name="[6c]"></a>speekers</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, main.o(i.speekers))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = speekers
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1ms
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_printselect
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_menu
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_full
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Query
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_data
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyBoard
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_Calibration_Function
</UL>

<P><STRONG><a name="[114]"></a>sqrt</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Calibration_Function
</UL>

<P><STRONG><a name="[143]"></a>starttest</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, setup.o(i.starttest))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = starttest
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_gas
</UL>

<P><STRONG><a name="[142]"></a>stoptest</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, setup.o(i.stoptest))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = stoptest
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;off_gas
</UL>

<P><STRONG><a name="[137]"></a>test_failule</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, main.o(i.test_failule))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = test_failule &rArr; LcdPrint8bitBmp &rArr; Active_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XY_Coordinate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical_FontEnlarge_x1
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Mode
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_String
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdPrint8bitBmp
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillRec
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Horizontal_FontEnlarge_x1
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Graphic_Mode
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundTransparency
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Font_with_BackgroundColor
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM_GB
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;External_CGROM
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_function
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[106]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[107]"></a>SetSysClockTo72</STRONG> (Thumb, 212 bytes, Stack size 12 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[119]"></a>_fp_digits</STRONG> (Thumb, 326 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[118]"></a>_printf_core</STRONG> (Thumb, 1762 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[11b]"></a>_printf_post_padding</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[11a]"></a>_printf_pre_padding</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[49]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
